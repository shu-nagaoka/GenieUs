version: '3.8'

services:
  # GenieUs Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: GenieUs-backend
    ports:
      - "8000:8000"
    environment:
      - ENV=production
      - PORT=8000
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    volumes:
      - ./backend/src:/app/src:ro  # 開発時のホットリロード用
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - GenieUs-network

  # GenieUs Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: GenieUs-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - GenieUs-network

  # Redis (将来のセッション管理用)
  redis:
    image: redis:7-alpine
    container_name: GenieUs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - GenieUs-network

networks:
  GenieUs-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
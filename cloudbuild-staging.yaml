# GenieUs Cloud Build Configuration for Staging
# StagingÁí∞Â¢ÉÂ∞ÇÁî®„ÅÆ„Ç∑„É≥„Éó„É´„Å™Ë®≠ÂÆö

steps:
  # Step 1: Áí∞Â¢ÉË®≠ÂÆö
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'setup'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîß Cloud BuildÁí∞Â¢ÉË®≠ÂÆö..."
        gcloud config set project $_GCP_PROJECT_ID
        echo "Project: $_GCP_PROJECT_ID"
        echo "Environment: $_ENVIRONMENT"
        echo "Region: $_GCP_REGION"

  # Step 2: „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Éá„Éó„É≠„Ç§
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üêç „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Çí„Éá„Éó„É≠„Ç§‰∏≠..."
        
        cd backend
        
        # „Éá„Éó„É≠„Ç§ÂÆüË°å
        echo "Backend Service: $_BACKEND_SERVICE_NAME"
        gcloud run deploy "$_BACKEND_SERVICE_NAME" \
          --source . \
          --platform managed \
          --region $_GCP_REGION \
          --allow-unauthenticated \
          --port 8080 \
          --cpu 1 \
          --memory 2Gi \
          --min-instances $_BACKEND_MIN_INSTANCES \
          --max-instances $_BACKEND_MAX_INSTANCES \
          --set-env-vars "GOOGLE_CLOUD_PROJECT=$_GCP_PROJECT_ID" \
          --set-env-vars "ENVIRONMENT=$_ENVIRONMENT" \
          --set-env-vars "GOOGLE_GENAI_USE_VERTEXAI=$_GOOGLE_GENAI_USE_VERTEXAI" \
          --set-env-vars "GOOGLE_CLOUD_LOCATION=$_GOOGLE_CLOUD_LOCATION" \
          --set-env-vars "ROUTING_STRATEGY=$_ROUTING_STRATEGY" \
          --set-env-vars "LOG_LEVEL=$_LOG_LEVEL" \
          --timeout 300 \
          --quiet
        
        # „Éê„ÉÉ„ÇØ„Ç®„É≥„ÉâURLÂèñÂæó„Åó„Å¶„Éï„Ç°„Ç§„É´„Å´‰øùÂ≠ò
        gcloud run services describe "$_BACKEND_SERVICE_NAME" \
          --platform managed \
          --region $_GCP_REGION \
          --format 'value(status.url)' > /workspace/backend_url.txt
        
        echo "‚úÖ „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Éá„Éó„É≠„Ç§ÂÆå‰∫Ü: $(cat /workspace/backend_url.txt)"

  # Step 3: „Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Éá„Éó„É≠„Ç§
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "‚öõÔ∏è „Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Çí„Éá„Éó„É≠„Ç§‰∏≠..."
        
        cd frontend
        
        # „Éê„ÉÉ„ÇØ„Ç®„É≥„ÉâURL„ÇíÂèñÂæó
        while [ ! -f /workspace/backend_url.txt ]; do
          echo "Waiting for backend URL..."
          sleep 5
        done
        
        # „Éá„Éó„É≠„Ç§ÂÆüË°å
        echo "Frontend Service: $_FRONTEND_SERVICE_NAME"
        echo "Backend URL: $(cat /workspace/backend_url.txt)"
        
        gcloud run deploy "$_FRONTEND_SERVICE_NAME" \
          --source . \
          --platform managed \
          --region $_GCP_REGION \
          --allow-unauthenticated \
          --port 3000 \
          --cpu 1 \
          --memory 1Gi \
          --min-instances $_FRONTEND_MIN_INSTANCES \
          --max-instances $_FRONTEND_MAX_INSTANCES \
          --set-env-vars "NODE_ENV=$_NODE_ENV" \
          --set-env-vars "NEXT_PUBLIC_API_BASE_URL=$(cat /workspace/backend_url.txt)" \
          --set-env-vars "NEXTAUTH_SECRET=$_NEXTAUTH_SECRET" \
          --set-env-vars "GOOGLE_CLIENT_ID=$_GOOGLE_CLIENT_ID" \
          --set-env-vars "GOOGLE_CLIENT_SECRET=$_GOOGLE_CLIENT_SECRET" \
          --timeout 300 \
          --quiet
        
        # „Éï„É≠„É≥„Éà„Ç®„É≥„ÉâURLÂèñÂæó
        gcloud run services describe "$_FRONTEND_SERVICE_NAME" \
          --platform managed \
          --region $_GCP_REGION \
          --format 'value(status.url)' > /workspace/frontend_url.txt
        
        # NEXTAUTH_URL„ÇíÊõ¥Êñ∞
        echo "üîß Updating NEXTAUTH_URL..."
        gcloud run services update "$_FRONTEND_SERVICE_NAME" \
          --region $_GCP_REGION \
          --update-env-vars "NEXTAUTH_URL=$(cat /workspace/frontend_url.txt)" \
          --quiet
        
        echo "‚úÖ „Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Éá„Éó„É≠„Ç§ÂÆå‰∫Ü: $(cat /workspace/frontend_url.txt)"
    waitFor: ['deploy-backend']

  # Step 4: „Éê„ÉÉ„ÇØ„Ç®„É≥„ÉâCORSË®≠ÂÆöÊõ¥Êñ∞
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'update-backend-cors'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîß „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„ÅÆCORSË®≠ÂÆö„ÇíÊõ¥Êñ∞‰∏≠..."
        
        # CORS_ORIGINS„ÇíÊõ¥Êñ∞
        gcloud run services update "$_BACKEND_SERVICE_NAME" \
          --region $_GCP_REGION \
          --update-env-vars "CORS_ORIGINS=$(cat /workspace/frontend_url.txt)" \
          --quiet
        
        echo "‚úÖ CORSË®≠ÂÆöÊõ¥Êñ∞ÂÆå‰∫Ü"
    waitFor: ['deploy-frontend']

  # Step 5: „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
  - name: 'gcr.io/cloud-builders/curl'
    id: 'health-check'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üè• „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØÂÆüË°å‰∏≠..."
        
        # Â∞ë„ÅóÂæÖÊ©ü
        sleep 10
        
        # „Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
        echo "Checking backend health..."
        if curl -f "$(cat /workspace/backend_url.txt)/health" -m 30; then
          echo "‚úÖ Backend health check OK"
        else
          echo "‚ö†Ô∏è Backend health check failed"
        fi
        
        # „Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
        echo "Checking frontend..."
        if curl -f "$(cat /workspace/frontend_url.txt)" -m 30 > /dev/null 2>&1; then
          echo "‚úÖ Frontend health check OK"
        else
          echo "‚ö†Ô∏è Frontend health check failed"
        fi
        
        echo ""
        echo "üéâ „Éá„Éó„É≠„Ç§ÂÆå‰∫Ü„Çµ„Éû„É™„Éº"
        echo "=========================="
        echo "Environment: $_ENVIRONMENT"
        echo "Project: $_GCP_PROJECT_ID"
        echo "Region: $_GCP_REGION"
        echo ""
        echo "Frontend URL: $(cat /workspace/frontend_url.txt)"
        echo "Backend URL: $(cat /workspace/backend_url.txt)"
        echo "API Docs: $(cat /workspace/backend_url.txt)/docs"
        echo "=========================="
    waitFor: ['update-backend-cors']

# ÁΩÆÊèõÂ§âÊï∞Ôºà„Éá„Éï„Ç©„É´„ÉàÂÄ§Ôºâ
substitutions:
  _GCP_PROJECT_ID: 'your-project-id'
  _ENVIRONMENT: 'staging'
  _GCP_REGION: 'asia-northeast1'
  _BACKEND_SERVICE_NAME: 'genius-backend-staging'
  _FRONTEND_SERVICE_NAME: 'genius-frontend-staging'
  _GOOGLE_GENAI_USE_VERTEXAI: 'True'
  _GOOGLE_CLOUD_LOCATION: 'us-central1'
  _ROUTING_STRATEGY: 'enhanced'
  _LOG_LEVEL: 'INFO'
  _NODE_ENV: 'production'
  _NEXTAUTH_SECRET: 'default-nextauth-secret'
  _GOOGLE_CLIENT_ID: ''
  _GOOGLE_CLIENT_SECRET: ''
  _BACKEND_MIN_INSTANCES: '0'
  _BACKEND_MAX_INSTANCES: '3'
  _FRONTEND_MIN_INSTANCES: '0'
  _FRONTEND_MAX_INSTANCES: '5'

# „Éì„É´„ÉâË®≠ÂÆö
timeout: 1800s
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'